{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "devVNETResourceGroup": {
      "type": "string",
      "defaultValue": "devVNET",
      "metadata": {
        "description": "The devVNET resource group."
      }
    },
    "devVNETVirtualNetworkName": {
      "type": "string",
      "defaultValue": "devnet",
      "metadata": {
        "description": "The devVNET network name."
      }
    },
    "appSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The app subnet name."
      }
    },
    "storageName": {
      "type": "string",
      "defaultValue": "app1stor"
    },
    "storageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS"
      ]
    },
    "vmName": {
      "type": "string",
      "defaultValue": "asaz-devweb-101"
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "domadm"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ]
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer"
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2"
    },
    "modulesUrl": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-iis-server-windows-vm/ContosoWebsite.ps1.zip",
      "metadata": {
        "description": "URL for the DSC configuration module. NOTE: Can be a Github url(raw) to the zip file"
      }
    },
    "configurationFunction": {
      "type": "string",
      "defaultValue": "ContosoWebsite.ps1\\ContosoWebsite",
      "metadata": {
        "description": "DSC configuration function to call"
      }
    },
    "sizeOfDiskInGB" : {
        "type" : "string",
        "metadata" : {
            "description" : "Size of the empty data disk in GB"
        }
    }
  },
  "variables" : {
    "vnetID" : "[resourceId(parameters('devVNETResourceGroup'), 'Microsoft.Network/virtualNetworks',parameters('devVNETVirtualNetworkName'))]",

    "nicNameMgmt" : "networkInterfaceMgmt",
    "subnetRefMgmt" : "[concat(variables('vnetID'),'/subnets/subnetMgmt')]",

    "nicNameApp" : "networkInterfaceApp",
    "subnetRefApp" : "[concat(variables('vnetID'),'/subnets/',parameters('appSubnetName'))]",
    "nicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicNameApp'))]",

    "subnetRefFrontEnd" : "[concat(variables('vnetID'),'/subnets/subnetFrontEnd')]",
    "loadBalancerName" : "webLoadBalancer",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",

    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
    "backEndIPConfigID": "[concat(variables('nicId'),'/ipConfigurations/ipconfig1')]",

    "vmOSDiskName": "osdisk",
    "vmStorageAccountContainerName": "vhds",

    "vmExtensionName": "dscExtension",
    "availabilitySet": "availabilitySet1"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicNameApp')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
          "[concat('Microsoft.Storage/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRefApp')]"
              }
            },
            "loadBalancerBackendAddressPools": [{
              "id": "[concat('Microsoft.Network/loadBalancers/',variables('loadBalancerName'),'/backendAddressPools/loadBalancerBackEnd')]"
              }],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat('Microsoft.Network/loadBalancers/',variables('loadBalancerName'),'/inboundNatRule/HTTP')]"
                },
                {
                  "id": "[concat('Microsoft.Network/loadBalancers/',variables('loadBalancerName'),'/inboundNatRule/HTTPS')]"
                }
              ]
            }
          ]
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicNameMgmt')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnetRefMgmt')]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "name": "[variables('loadBalancerName')]",
        "type": "Microsoft.Network/loadBalancers",
        "location": "[resourceGroup().location]",
        "properties": {
          "frontendIPConfigurations": [{
            "name": "loadBalancerFrontEnd",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRefFrontEnd')]"
              }
            }
            }],
            "backendAddressPools": [{
              "name": "loadBalancerBackEnd"
            }
          ],
          "inboundNatRules": [
            {
              "name": "HTTP",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "protocol": "tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false
              }
            },
            {
              "name": "HTTPS",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "protocol": "tcp",
                "frontendPort": 81,
                "backendPort": 81,
                "enableFloatingIP": false
              }
            }
          ]
        }
      },
      {
        "name": "[parameters('storageName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[resourceGroup().location]",
        "apiVersion": "2015-05-01-preview",
        "tags": {
          "displayName": "Storage"
        },
        "properties": {
          "accountType": "[parameters('storageType')]"
        }
      },
      {
        "name": "[parameters('vmName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[resourceGroup().location]",
        "apiVersion": "2015-05-01-preview",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', parameters('storageName'))]",
          "[concat('Microsoft.Network/networkInterfaces/', variables('nicNameApp'))]",
          "[concat('Microsoft.Network/networkInterfaces/', variables('nicNameMgmt'))]",
          "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySet'))]"
        ],
        "tags": {
          "displayName": "devweb"
        },
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySet'))]"
          },
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computername": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('imagePublisher')]",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('windowsOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "dcOSDisk",
              "vhd": {
                "uri": "[concat('http://', parameters('storageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('vmOSDiskName'), '.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            },
            "dataDisks" : [
            {
                "name" : "datadisk1",
                "diskSizeGB" : "[parameters('sizeOfDiskInGB')]",
                "lun" : 0,
                "vhd":{
                    "Uri" : "[concat('http://',parameters('storageName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/','datadisk1.vhd')]"
                },
                "createOption":"Empty"
            }]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "properties": {
                  "primary": true
                },
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicNameApp'))]"
              },
              {
                "properties": {
                  "primary": false
                },
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicNameMgmt'))]"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('vmName'),'/', variables('vmExtensionName'))]",
        "apiVersion": "2015-05-01-preview",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
        ],
        "properties": {
          "publisher": "Microsoft.Powershell",
          "type": "DSC",
          "typeHandlerVersion": "1.9",
          "settings": {
            "ModulesUrl": "[parameters('modulesUrl')]",
            "SasToken": "",
            "ConfigurationFunction": "[parameters('configurationFunction')]",
            "Properties": {
              "MachineName": "[parameters('vmName')]"
            }
          },
          "protectedSettings": null
        }
      },
      {
        "type": "Microsoft.Compute/availabilitySets",
        "name": "[variables('availabilitySet')]",
        "apiVersion": "2015-05-01-preview",
        "location": "[resourceGroup().location]",
        "properties": {
        }
      }
    ]
  }
